function TeXout = aUTSAAllMath(sStart, sEnd)
    sFileName = 'aUTSAAllMath';

    % Total number of students in database who took math
    sSQL = ['exec spNewTrasnferStudents ' sStart ',' sEnd];
    [o,sDataFile] = funSaveMAT([sFileName '-1'], sSQL, 'M');
    T = sum(o);
   
    fig = funNewFig();
    %subplot(1,2,1)
    pie(o, {['New-Math (' num2str(floor(100*o(1)/T)) '%)'],['Trnsfr-Math (' num2str(ceil(100*o(2)/T)) '%)'],...
            ['New-NOMath (' num2str(floor(100*o(3)/T)) '%)'],['Trnsfr-NOMath (' num2str(ceil(100*o(4)/T)) '%)']});
    p = strrep(sStart,'.33', ' Summer');
    p = strrep(p,'.66', ' Fall');
    p = strrep(p,'.00', ' Spring');
    q = strrep(sEnd,'.33', ' Summer');
    q = strrep(q,'.66', ' Fall');
    q = strrep(q,'.00', ' Spring');
    title(['Roadrunners Arriving ' p '/' q]);
    TeXout = funPrintImage(fig,'figUTSAMathTotal',12);
    
    % All students, all course levels
    sSQL = ['select	SHRTCKN_SUBJ_CODE,  count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ... 
            ' from	OIR  O1'... % where  STUDENTTYPE like ''transfer'''...
            ' where CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE '...
            ' order by count(distinct identifier) desc'];
    sTitle = 'All students, all course levels';
    [o,sDataFile] = funSaveMAT([sFileName '-2'], sSQL, 'C');
    s = piePlot(o,sTitle);
    TeXout = [TeXout newline newline s];

    % All students, first-year courses
    sSQL = ['select	SHRTCKN_SUBJ_CODE, count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ... 
            ' from	OIR  O1 '...
            ' where cast(CT_SUBJECT as integer) < 2000  '... %and STUDENTTYPE like ''transfer''' ... 
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE order by count(distinct identifier) desc'];
    sTitle = 'All students, first-year courses';
    [o,sDataFile] = funSaveMAT([sFileName '-3'], sSQL, 'C');
    s = piePlot(o, sTitle);
    TeXout = [TeXout newline newline s];
    
    % All students, first-year courses who fail
    sSQL = ['select	SHRTCKN_SUBJ_CODE, count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ...
            ' from	OIR O1 '...
            ' where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'') '... % and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE order by count(distinct identifier) desc'];
    sTitle = 'All students, DFW in first year';
    [o,sDataFile] = funSaveMAT([sFileName '-4'], sSQL, 'C');
    s = piePlot(o, sTitle);
    TeXout = [TeXout newline newline s];
    
    % All students, first-year courses who pass
    sSQL = ['select	SHRTCKN_SUBJ_CODE, count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ...
            ' from	OIR  O1 '...
            ' where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'') ' ...
            ' and cast(CT_SUBJECT as integer) < 2000  '... %and STUDENTTYPE like ''transfer'''  ... 
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE order by count(distinct identifier) desc'];
    sTitle = 'All students, ABC in first year';
    [o,sDataFile] = funSaveMAT([sFileName '-5'], sSQL, 'C');
    s = piePlot(o, sTitle);
    TeXout = [TeXout newline newline s];
    
    % All students, who fail first year and do not reach 4000 level
    sSQL = [ ...
            'select	SHRTCKN_SUBJ_CODE+''_f'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ...
            ' from	OIR O1 '...
            ' where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'')  '...% and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier  '...%and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) > 4000) = 0' ...
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            ' union ' ...
            ' select SHRTCKN_SUBJ_CODE+''_p'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ...
            ' from	OIR O1 '...
            ' where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'')  '...% and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier  '...% and STUDENTTYPE like ''transfer'' '...
            ' and cast(CT_SUBJECT as integer) > 4000) = 0' ...
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            'order by count(distinct identifier) desc' ...
            ];
    sTitle = 'All students with ABC (noted $X_p$) or DFW (noted $X_f$) in first year who DO NOT reach 4000. ';
    [o,sDataFile] = funSaveMAT([sFileName '-6'], sSQL, 'C');
    s = piePlot(o, sTitle);
    TeXout = [TeXout newline newline s];
    
    % All students, who fail first year and reach 4000 level
    sSQL = [ ...
            'select	SHRTCKN_SUBJ_CODE+''_f'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS) , floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED]))' ...
            ' from	OIR O1 '...
            ' where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'')   '...%and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier  '...%and STUDENTTYPE like ''transfer'' '...
            ' and cast(CT_SUBJECT as integer) > 4000) > 0' ...
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            ' union ' ...
            ' select SHRTCKN_SUBJ_CODE+''_p'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), floor(avg([SAT_WCR_CONVERTED])), floor(avg([SAT_MATH_CONVERTED])) ' ...
            ' from	OIR O1 ' ... 
            ' where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'')   '...%and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier  '...%and STUDENTTYPE like ''transfer'' '...
            ' and cast(CT_SUBJECT as integer) > 4000) > 0' ...
            ' and CURRENTTERM>=' sStart ' and CURRENTTERM<=' sEnd ' and O1.IDENTIFIER not in (select DISTINCT IDENTIFIER from OIR O2 where O1.IDENTIFIER = O2.IDENTIFIER and O2.CURRENTTERM < ' sStart ')'...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            ' order by count(distinct identifier) desc' ...
            ];
    sTitle = 'All students with ABC (noted $X_p$) or DFW (noted $X_f$) in first year who reach 4000. ';
    [o,sDataFile] = funSaveMAT([sFileName '-7'], sSQL, 'C');
    s = piePlot(o, sTitle);
    TeXout = [TeXout newline newline s];
         
end

function TeXout = piePlot(o, sTitle)
    fig = figure(); %clf
    set(fig,'WindowStyle','docked')
    colormap lines

    idx = find(cellfun(@isempty,o(:,4))); 
    o(idx,:) = [];
    labels = o(:,1);
    nCourses = cell2mat(o(:,2));
    nCreditHours = cell2mat(o(:,3));    
    fACTGen = o(:,4);
    fACTMath = o(:,5);
    explode = ismember(labels,{'MAT','AST','BIO','CHE','PHY','CS','ES','GEO'});
    n = find(explode,1,'last');
    if isempty(n), n = length(o)-2; end
    explode(n+2:end) = [];
    explode(n+1)=1;
    labels{n+1}='Other';
    labels = labels(1:n+1);
    %B = cellfun(@num2str,fACTMath(1:n+1), 'UniformOutput',false);
    %labels = strcat(labels,'_{',B, '}');
    nCourses(n+1) = sum(nCourses(n+1:end));
    nCourses(n+2:end) = [];
    nCreditHours(n+1) = sum(nCreditHours(n+1:end));
    nCreditHours(n+2:end) = [];

    % Mathematics department by courses
    subplot(2,2,1)
    pie(nCourses, explode, labels);
    t = title('Students by Department', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    subplot(2,2,2)
    pie(nCourses, explode);
    t = title('Students by Department', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    % Mathematics department by credit hour
    subplot(2,2,3)
    pie(nCreditHours, explode, labels);
    t = title('Departments by Credit Hour', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    subplot(2,2,4)
    pie(nCreditHours, explode);
    t = title('Departments by Credit Hour', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    
    % Add the overall title
    axes('Parent', fig, ...
        'Units', 'normalized', ...
        'Position', [0, 0, 1, 1], ...
        'Visible', 'off', ...
        'XLim', [0, 1], ...
        'YLim', [0, 1], ...
        'NextPlot', 'add');
    %sTitle = [sTitle '. Math = ' num2str(o{1,2}) ' of ' num2str(o{1,3})]; 
    text(0.1,0.97, [sTitle '. CH=' num2str(sum(nCreditHours))] ... 
                    ,'FontSize',10,'FontWeight','bold');
                    %'. SAT Wrc=' num2str(mean(cell2mat(fACTGen)))  ...
                    %'. SAT Mat=' num2str(mean(cell2mat(fACTMath))) ]...
    
    TeXout = funPrintImage(fig,sTitle,12); 
end