function aMathDeptStat()
    config
    
    % Total number of students in database
    o = funQuery2Matrix('select count(distinct identifier) from OIR where  STUDENTTYPE like ''transfer''');
    T = o(1);   
    
    
    % Total number of students in database who took math
    sSQL = [' select	count(distinct identifier) from	oir o1' ...
            ' where ''MAT'' in (select SHRTCKN_SUBJ_CODE from oir o2 where o1.identifier = o2.IDENTIFIER) and STUDENTTYPE like ''transfer'''];
    o = funQuery2Matrix(sSQL);
    M = o(1);
    % Total number of students in database who DID NOT take math
    sSQL = [' select	count(distinct identifier) from	oir o1' ...
            ' where ''MAT'' not in (select SHRTCKN_SUBJ_CODE from oir o2 where o1.identifier = o2.IDENTIFIER) and STUDENTTYPE like ''transfer'''];
    o = funQuery2Matrix(sSQL);
    N = o(1);
    
    fig = figure(); clf
    set(fig,'WindowStyle','docked')
    colormap summer
    %subplot(1,2,1)
    pie([N M], {['No-Math (' num2str(floor(100*N/T)) '%)'],['Math (' num2str(ceil(100*M/T)) '%)']});
    title('UTSA Students Who Take Math Courses')
    funPrintImage(fig,'figUTSAMathTotal',12)

    
    % All students, all course levels
    sSQL = ['select	SHRTCKN_SUBJ_CODE,  count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ... 
            ' from	OIR where  STUDENTTYPE like ''transfer'''...
            ' group by SHRTCKN_SUBJ_CODE '...
            ' order by count(distinct identifier) desc'];
    sTitle = 'All students, all course levels. ';
    piePlot(sSQL,sTitle);

    % All students, first-year courses
    sSQL = ['select	SHRTCKN_SUBJ_CODE, count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ... 
            ' from	OIR where cast(CT_SUBJECT as integer) < 2000  and STUDENTTYPE like ''transfer''' ... 
            ' group by SHRTCKN_SUBJ_CODE order by count(distinct identifier) desc'];
    sTitle = 'All students, first-year. ';
    piePlot(sSQL, sTitle);
    
    % All students, first-year courses who fail
    sSQL = ['select	SHRTCKN_SUBJ_CODE, count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'')  and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' group by SHRTCKN_SUBJ_CODE order by count(distinct identifier) desc'];
    sTitle = 'All students, DFW in first year. ';
    piePlot(sSQL, sTitle);
    
    % All students, first-year courses who pass
    sSQL = ['select	SHRTCKN_SUBJ_CODE, count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'') ' ...
            ' and cast(CT_SUBJECT as integer) < 2000  and STUDENTTYPE like ''transfer'''  ... 
            ' group by SHRTCKN_SUBJ_CODE order by count(distinct identifier) desc'];
    sTitle = 'All students, ABC in first year. ';
    piePlot(sSQL, sTitle);
    
    % All students, who fail first year and do not reach 3000 level
    sSQL = [ ...
            'select	SHRTCKN_SUBJ_CODE+''_f'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR O1 where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'') ' ...
            ' and cast(CT_SUBJECT as integer) < 2000  and STUDENTTYPE like ''transfer'''  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier and cast(CT_SUBJECT as integer) > 3000  and STUDENTTYPE like ''transfer'') = 0' ...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            ' union ' ...
            ' select SHRTCKN_SUBJ_CODE+''_p'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR O1 where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'')  and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier and cast(CT_SUBJECT as integer) > 3000  and STUDENTTYPE like ''transfer'') = 0' ...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            'order by count(distinct identifier) desc' ...
            ];
    sTitle = 'All students with ABC (noted X_p) or DFW (noted X_f) in first year who DO NOT reach 3000. ';
    piePlot(sSQL, sTitle);
    
    % All students, who fail first year and do not reach 4000 level
    sSQL = [ ...
            'select	SHRTCKN_SUBJ_CODE+''_f'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR O1 where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'')  and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier and STUDENTTYPE like ''transfer'' and cast(CT_SUBJECT as integer) > 4000) = 0' ...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            ' union ' ...
            ' select SHRTCKN_SUBJ_CODE+''_p'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR O1 where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'')  and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier and STUDENTTYPE like ''transfer'' and cast(CT_SUBJECT as integer) > 4000) = 0' ...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            'order by count(distinct identifier) desc' ...
            ];
    sTitle = 'All students with ABC (noted X_p) or DFW (noted X_f) in first year who DO NOT reach 4000. ';
    piePlot(sSQL, sTitle);
    
    % All students, who fail first year and reach 4000 level
    sSQL = [ ...
            'select	SHRTCKN_SUBJ_CODE+''_f'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS) , avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE])' ...
            ' from	OIR O1 where [SHRTCKG_GRDE_CODE_FINAL] in (''D'',''F'',''W'')  and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier and STUDENTTYPE like ''transfer'' and cast(CT_SUBJECT as integer) > 4000) > 0' ...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            ' union ' ...
            ' select SHRTCKN_SUBJ_CODE+''_p'', count(distinct identifier), sum(SHRTCKG_CREDIT_HOURS), avg([ACT_COMP_SCORE]), avg([ACT_MATH_SCORE]) ' ...
            ' from	OIR O1 where [SHRTCKG_GRDE_CODE_FINAL] in (''A'',''B'',''C'')  and STUDENTTYPE like ''transfer''' ...
            ' and cast(CT_SUBJECT as integer) < 2000 '  ... 
            ' and (select count(identifier) from oir o2 where o1.identifier=o2.identifier and STUDENTTYPE like ''transfer'' and cast(CT_SUBJECT as integer) > 4000) > 0' ...
            ' group by SHRTCKN_SUBJ_CODE ' ...
            'order by count(distinct identifier) desc' ...
            ];
    sTitle = 'All students with ABC (noted X_p) or DFW (noted X_f) in first year who reach 4000. ';
    piePlot(sSQL, sTitle);
    
     
end

function piePlot(sSQL, sTitle)
    fig = figure(); clf
    set(fig,'WindowStyle','docked')
    colormap lines

    o = funQuery2Cell(sSQL); 
    idx = find(cellfun(@isempty,o(:,4))); 
    o(idx,:) = [];
    labels = o(:,1);
    nCourses = cell2mat(o(:,2));
    nCreditHours = cell2mat(o(:,3));    
    fACTGen = o(:,4);
    fACTMath = o(:,5);
    explode = ismember(labels,{'MAT','BIO','CHE','PHY','CS','ES','GEO'});
    n = find(explode,1,'last');
    if isempty(n), n = length(o)-2; end
    explode(n+2:end) = [];
    explode(n+1)=1;
    labels{n+1}='Other';
    labels = labels(1:n+1);
    %B = cellfun(@num2str,fACTMath(1:n+1), 'UniformOutput',false);
    %labels = strcat(labels,'_{',B, '}');
    nCourses(n+1) = sum(nCourses(n+1:end));
    nCourses(n+2:end) = [];
    nCreditHours(n+1) = sum(nCreditHours(n+1:end));
    nCreditHours(n+2:end) = [];

    % Mathematics department by courses
    subplot(2,2,1)
    pie(nCourses, explode, labels);
    t = title('Students by Department', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    subplot(2,2,2)
    pie(nCourses, explode);
    t = title('Students by Department', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    % Mathematics department by credit hour
    subplot(2,2,3)
    pie(nCreditHours, explode, labels);
    t = title('Departments by Credit Hour', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    subplot(2,2,4)
    pie(nCreditHours, explode);
    t = title('Departments by Credit Hour', 'Units', 'normalized', 'Position', [0.5, -0.2, 0]); 
    
    % Add the overall title
    axes('Parent', fig, ...
        'Units', 'normalized', ...
        'Position', [0, 0, 1, 1], ...
        'Visible', 'off', ...
        'XLim', [0, 1], ...
        'YLim', [0, 1], ...
        'NextPlot', 'add');
    %sTitle = [sTitle '. Math = ' num2str(o{1,2}) ' of ' num2str(o{1,3})]; 
    text(0.1,0.97, [sTitle 'CH=' num2str(sum(nCreditHours)) ... 
                    '. ACT Gen=' num2str(mean(cell2mat(fACTGen)))  ...
                    '. ACT Math=' num2str(mean(cell2mat(fACTMath))) ] ,'FontSize',10,'FontWeight','bold');
    
    funPrintImage(fig,sTitle,12)
    
end